- if false #current_user.sign_in_count.eql? 1
  =# render template: 'devise/passwords/edit', locals: {resource: current_user, resource_name: 'User'}
= render partial: '/users/personal_data', locals: {user: @student.user}

%nav
  #nav-tab.nav.nav-tabs{role: "tablist"}
    - @student.grades.each_with_index do |grade, i|
      - active = (i.eql? 0) ? 'show active' : ''
      %button.nav-link{"aria-controls": :"nav-#{grade.id}", "aria-selected": :true, "data-bs-target": :"#nav-#{grade.id}", "data-bs-toggle": :tab, role: :tab, type: :button, id: "#nav-tab-#{grade.id}", class: active}= grade.school.name
#nav-tabContent.tab-content
  - @student.grades.each_with_index do |grade, i|
    - active = (i.eql? 0) ? 'show active' : ''

    .tab-pane.fade{"aria-labelledby": :"nav-home-tab", role: :tabpanel, id: "nav-#{grade.id}", class: active}
    - school = grade.school
    - if false #current_user.eql? @student.user and grade and grade.reportepago.nil? and grade.asignado? and !@grado.enroll_academic_process.any?
      - # REPORTE DE PAGO DE LA ESCUELA
      - # 
      = # render template: 'payment_reports/new'que contenga lo de abajo 👇🏽
      - @reportable = @grado
      - @payment_report = PaymentReport.new
      - content = render partial: "/payment_reports/form"
      = render partial: '/layouts/scaffold-modal', locals: {id_modal: "paymentReportGrade#{@grado.id}", content: content, title: 'Reportar Pago a la Facultad de Ingreso a Escuela'}

      = link_to '#', onclick: "$('#paymentReportGrade#{@grado.id}').modal()", class: 'm-3 btn btn-success' do
        = glyph 'plus'
        = "Reportar Pago Ingreso a #{school.descripcion}"

    - @academic_process = school.enroll_process
    - @academic_process_before = @academic_process.process_before if @academic_process
    - @enroll_in_process = grade.enroll_academic_processes.where(academic_process_id: @academic_process.id).first if @academic_process

    - if grade.appointment_time and grade.duration_slot_time and @enroll_in_process.nil?
      - # VALIDA QUE TENGA CITA HORARIA, QUE NO SE HAYA PREINSCRITO
      - # >>>>> OJO: FALTA VALIDAR QUE NO HAYA OCURRIDO LA CITA, ES DECIR, QUE ESTÉ EN EL FUTURO <<<<<
      - # MENSAJE DE CITA HORARIA:
      = render partial: 'grades/msg_appointment_time', locals: {grade: grade}

    - if @academic_process and @academic_process_before
      - # INSCRIPCIÓN ABIERTA PARA PROCESO ACADÉMICO:
      %h4.text-center.text-success.mt-1= "INSCRIPCIÓN  #{@academic_process.period.name} ABIERTA"
      - @limitCredits = @academic_process.max_credits
      - @limitSubjects = @academic_process.max_subjects

      - enrolling = (@enroll_in_process and @enroll_in_process.reservado?)
      - if @enroll_in_process.nil? or enrolling
        - # NO INSCRITO O RESERVADO:
        - @totalCreditsReserved = @enroll_in_process ? @enroll_in_process.total_credits : 0
        - @totalSubjectsReserved = @enroll_in_process ? @enroll_in_process.total_subjects : 0
        - process_before = @academic_process.process_before 
        - current_enrollment_day = @academic_process.enrollment_days.of_today.first
        - active_enrollment_day = (current_enrollment_day and current_enrollment_day.active_now?)? true : false
        - if active_enrollment_day
          %h4.text-center.alert.alert-success= "Jornada por Cita Horaria Activa"
        
        - enabled_enroll_by_appointment = active_enrollment_day and grade.can_enroll_by_apponintment?
        
        - enrolled_in_before_progress = grade.enroll_academic_processes.of_academic_process(@academic_process_before.id).any?

        - special_enabled_to_enroll = (grade.enabled_enroll_process.eql? @academic_process.id)

        - valid_to_regular_enroll = (current_enrollment_day.nil? and ((grade.confirmado? or grade.reincorporado?) and (grade.is_new? or enrolled_in_before_progress) or special_enabled_to_enroll ))

        
        - #permitida = !(@grado.articulo_7? or @grado.articulo_6? or @grado.iniciado_periodo_id.eql? @periodo_inscripcion.id)
        - #NOTA INTERNA: La siguiente línea no funciona con or. por lo que fue cambiada a || 
        - #Tiene que ver con que el or pareciera un or exclusivo, es decir que tienen que ser todos true
        - enabled_enroll_by_general = enrolling or valid_to_regular_enroll 

        - if (enabled_enroll_by_appointment or enabled_enroll_by_general)
          - courses_offer = @academic_process.courses

          - if school.enable_dependents?
            - subjects_offer_by_dependency = grade.subjects_offer_by_dependent
            - courses_offer = courses_offer.where(subject_id: subjects_offer_by_dependency)

          - courses_offer = courses_offer.joins(:subject).order('subjects.ordinal': :asc)

          - @aprobadas = grade.subjects_approved.ids.uniq.flatten

          %button.btn.btn-lg.btn-success.position-absolute.top-50.start-50.translate-middle{"data-bs-target": "#Enrollment", "data-bs-toggle": :modal, type: :button}
            .fa.fa-education
            = "Preinscribirse en Proceso Académico #{@academic_process.period.name} de la #{school.name}"
          - msgDanger = "Seleccione las asignaturas que desea preinscribir. Recuerde mover el scroll para ver todas las asignaturas ofertadas."

          - title1 = "Preinscripción en Proceso Académico #{@academic_process.period.name}"
          - title2 = "#{school.name}"
          - content = render partial: '/enroll_academic_processes/form', locals: {courses_offer: courses_offer, msgDanger: msgDanger, grade: grade, academic_process: @academic_process}

          = render partial: '/layouts/scaffold-modal-static', locals: {content: content, title1: title1, title2: title2, id: 'Enrollment'}

          

=# render 'layouts/loading'
