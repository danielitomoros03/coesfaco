- if false #current_user.eql? @student.user and grade and grade.reportepago.nil? and grade.asignado? and !@grado.enroll_academic_process.any?
	- # REPORTE DE PAGO DE LA ESCUELA
	- # 
	= # render template: 'payment_reports/new'que contenga lo de abajo 👇🏽
	- reportable = grado
	- payment_report = PaymentReport.new
	- content = render partial: "/payment_reports/form"
	= render partial: '/layouts/scaffold-modal', locals: {id_modal: "paymentReportGrade#{@grado.id}", content: content, title: 'Reportar Pago a la Facultad de Ingreso a Escuela'}

	= link_to '#', onclick: "$('#paymentReportGrade#{grado.id}').modal()", class: 'm-3 btn btn-success' do
		= glyph 'plus'
		= "Reportar Pago Ingreso a #{grade.school.code}"

- if session[:rol] and session[:rol].eql? 'admin' and current_user and current_user.admin and (current_user.admin.authorized_manage? 'AcademicRecord')
	.m-3.p-3= render partial: 'enroll_academic_processes/new', locals: {grade: grade}
- else
	- school = grade.school
	- academic_process = school.enroll_process
	- academic_process_before = academic_process.process_before if academic_process
	- enroll_in_process = grade.enroll_academic_processes.where(academic_process_id: academic_process.id).first if academic_process

	- # VALIDA QUE TENGA CITA HORARIA, QUE NO SE HAYA PREINSCRITO
	- # >>>>> OJO: FALTA VALIDAR QUE NO HAYA OCURRIDO LA CITA, ES DECIR, QUE ESTÉ EN EL FUTURO <<<<<
	- if (grade.appointment_time and grade.duration_slot_time and grade.appointment_time > Time.zone.now and enroll_in_process.nil?)
		- # MENSAJE DE CITA HORARIA:
		= render partial: 'grades/msg_appointment_time', locals: {grade: grade}

	- # INSCRIPCIÓN ABIERTA PARA PROCESO ACADÉMICO:
	- if academic_process and academic_process_before
		- enrolling = (!enroll_in_process.nil? and enroll_in_process.reservado?)
		- # NO INSCRITO O RESERVADO:
		- if enroll_in_process.nil? or enrolling
			- totalCreditsReserved = enroll_in_process ? enroll_in_process.total_credits : 0
			- totalSubjectsReserved = enroll_in_process ? enroll_in_process.total_subjects : 0
			- process_before = academic_process.process_before 
			- current_enrollment_day = academic_process.enrollment_days.of_today.first
			- active_enrollment_day = (current_enrollment_day and current_enrollment_day.active_now?)? true : false
			- if active_enrollment_day
				%h4.text-center.alert.alert-success= "Jornada por Cita Horaria Activa"

			- enabled_enroll_by_appointment = (!active_enrollment_day.nil? and grade.can_enroll_by_apponintment?)

			- enrolled_in_before_progress = grade.enroll_academic_processes.of_academic_process(academic_process_before.id).any?

			- special_enabled_to_enroll = (grade.enabled_enroll_process.eql? academic_process.id)

			- valid_to_regular_enroll = (current_enrollment_day.nil? and ((grade.confirmado?) and (grade.is_new? or enrolled_in_before_progress) or special_enabled_to_enroll ))

			- #permitida = !(@grado.articulo_7? or @grado.articulo_6? or @grado.iniciado_periodo_id.eql? @periodo_inscripcion.id)
			- #NOTA INTERNA: La siguiente línea no funciona con or. por lo que fue cambiada a || 
			- #Tiene que ver con que el or pareciera un or exclusivo, es decir que tienen que ser todos true. O tiene que ver con que algunos valores no son binarios (true or flase) sino que son null u otra cosa
			- enabled_enroll_by_general = false #enrolling || valid_to_regular_enroll 

			- if (enabled_enroll_by_appointment || enabled_enroll_by_general)
				%h4.text-center.text-success.mt-1= "INSCRIPCIÓN  #{academic_process.period.name} ABIERTA"
				.m-3.p-3.text-center= render partial: 'enroll_academic_processes/new', locals: {grade: grade}


= render partial: 'grades/academic_resume', locals: {grade: grade}
= render template: 'enroll_academic_processes/index', locals: {enroll_academic_processes: grade.enroll_academic_processes}
